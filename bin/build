#!/usr/bin/env node

const clap = require('clap');
const path = require('path');
const commonOptions = require('../lib/cli');
const build = require('../lib/build');

// define command
const command = clap.command('discovery-build', '[config]')
    .option(...commonOptions.config)
    .option(...commonOptions.model)
    .option('-o, --output <path>', 'Path for a build result (`build` by default)',
        (value = '') => path.resolve(process.cwd(), value),
        'build'
    )
    .option('-s, --single-file', 'Output a model build as a single file')
    .option('--pretty-data [indent]', 'Pretty print of data.json', (value = 4) => Number(value) || false, false)
    .option('--cleanup', 'Delete all files of output path before saving a result to it')
    .version(require('../package.json').version)
    .action(function(args) {
        const configFile = this.values.config || args[0];
        const options = Object.assign({}, this.values, {
            configFile
        });

        build(options);
    });

// run command
try {
    command.run();
} catch (e) {
    // output user frendly message if cli error
    if (e instanceof clap.Error) {
        console.error(e.message || e);
        process.exit(2);
    }

    // otherwise re-throw exception
    throw e;
}
