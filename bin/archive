#!/usr/bin/env node

const clap = require('clap');
const fs = require('fs');
const commonOptions = require('../lib/cli');
const buildArchive = require('../lib/archive');

// define command
const command = clap.command('discovery-archive [config]')
    .version(require('../package.json').version)
    .option(...commonOptions.config)
    .option(...commonOptions.model)
    .option(...commonOptions.noCache)
    .option(...commonOptions.cachedir)
    .option(...commonOptions.checkCacheTtl)
    .option(...commonOptions.minify)
    .option(...commonOptions.dataCompression)
    .option(...commonOptions.sourcemap)
    .option(...commonOptions.embed)
    .option(...commonOptions.experimentalJsonxl)
    .action(async function({ options, args }) {
        const configFile = options.config || args[0];
        const { filename, stream } = await buildArchive({
            ...options,
            configFile
        });

        if (typeof process.send === 'function') {
            process.send({
                payload: 'stream',
                filename
            });
            stream.pipe(fs.createWriteStream(null, { fd: 4 }));
        }
    });

// run command
try {
    command.run();
} catch (e) {
    // output user frendly message if cli error
    if (e instanceof clap.Error) {
        console.error(e.message || e);
        process.exit(2);
    }

    // otherwise re-throw exception
    throw e;
}
