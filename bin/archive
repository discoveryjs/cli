#!/usr/bin/env node

const clap = require('clap');
const fs = require('fs');
const commonOptions = require('../lib/cli');
const buildStatic = require('../lib/archive');

// define command
const command = clap.command('discovery-archive', '[config]')
    .version(require('../package.json').version)
    .option(...commonOptions.config)
    .option(...commonOptions.model)
    .option(...commonOptions.noCache)
    .option(...commonOptions.cachedir)
    .option(...commonOptions.checkCacheTtl)
    .action(function(args) {
        const configFile = this.values.config || args[0];

        const options = {
            ...this.values,
            configFile
        };

        buildStatic(options).then(({ filename, stream }) => {
            if (typeof process.send === 'function') {
                process.send({
                    payload: 'stream',
                    filename
                });
                stream.pipe(fs.createWriteStream(null, { fd: 4 }));
                return;
            }
        });
    });

// run command
try {
    command.run();
} catch (e) {
    // output user frendly message if cli error
    if (e instanceof clap.Error) {
        console.error(e.message || e);
        process.exit(2);
    }

    // otherwise re-throw exception
    throw e;
}
